Video de Youtube de HolaMundo Aprende GIT ahora!
https://www.youtube.com/watch?v=VdGzPZ31ts8


Actualicación del GIT en Windows
git update-git-for-windows
Actualicación del GIT en Mac
brew upgrade git

Configuracion del GIT:
git --version o git -v //para ver la version instalada
git config --global user.name "Pancho Garcia-Almenta"
git config --global user.email drowobservador@hotmail.com
git config --global core.editor "code --wait" // Abre por defecto el VScode al editar
git config --global core.autoclrf true //True para windows auto para Linux/Mac

OJO!!
En el Mac hay que añadir el path del VScode para que sea el editor x defecto:
    Make sure you can run code --help from the command line and you get help.

        if you do not see help, please follow these steps:

            Mac: Select Shell Command: Install 'Code' command in path from the Command Palette.
                Command Palette is what pops up when you press shift + ⌘ + P while inside VS Code. (shift + ctrl + P in Windows)
            Windows: Make sure you selected Add to PATH during the installation.
            Linux: Make sure you installed Code via our new .deb or .rpm packages.
    From the command line, run git config --global core.editor "code --wait"

Now you can run git config --global -e and use VS Code as editor for configuring Git. 



git config --global init.defaultBranch main  // Si no se añade esto se nombra como master, pero el Github es main y se enchocha

git config --global -e // Edita
 la configuración global
git version

git config -h //para ver las opciones de config

Comandos BASH:
ls   / ls a
mkdir
rm remover archivos
mv archivo  para renombrar archivos

Comandos de GIT:
git init //para inicializar el seguimiento de Git de un directorio
git status //nos da el estado del directorio
git add nombre_de_archivo //para añadir archivos al stage
git commit -m "Descripcion de porque se ha hecho el commit"
git rm nombre_de_archivo //para borrar un archivo y no tener que hacer el commit
git add/rm
git restore
git mv archivo nuevoarchivo
git status -s
git diff para ver cambios que se van a hacer antes del commit
git diff --staged //para ver los cambios aprobados por commit (q para salir)
git log
git log --oneline
git branch //para ver en que rama estoy trabajando
git checkout -b nombre_rama //para crear una rama 
git checkout master //para volver a la raiz
git merge ramab //para incluir los cambios de la ramab
git merge ramab //hay que hacerlo desde master
git remote add origin https://github.com/pancho33/Git_Aprendiendo.git
git push -u origin master
git push //para subir los cambios a GitHub

